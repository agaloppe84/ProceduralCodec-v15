name: CI
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # tu peux garder 3.11 ici si ça passe

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r configs/requirements.dev.txt

      - name: Install PyTorch (CPU wheels)
        run: |
          pip install --index-url https://download.pytorch.org/whl/cpu torch==2.3.1+cpu

      # 1) Sous-packages monorepo (editable)
      - name: Install monorepo packages (editable)
        run: |
          pip install -e packages/pc15core \
                      -e packages/pc15proc \
                      -e packages/pc15codec \
                      -e packages/pc15vq \
                      -e packages/pc15metrics \
                      -e packages/pc15data \
                      -e packages/pc15viz \
                      -e packages/pc15wf
          # pip install -e packages/pc15learn  # si présent

      # 2) Façade pc15 (editable) — IMPORTANT
      - name: Install pc15 facade (editable)
        run: pip install -e .

      # (Optionnel) petit smoke check rassurant
      - name: Smoke check imports
        run: |
          python - <<'PY'
          import pc15, pc15codec, pc15proc
          print("pc15 ok:", getattr(pc15, "__version__", "n/a"))
          print("pc15codec ok:", getattr(pc15codec, "__version__", "editable"))
          print("façade encode_y symbol:", hasattr(pc15, "encode_y"))
          PY

      - name: Test
        run: |
          export PC15_ALLOW_CPU_TESTS=1
          pytest -q --maxfail=1 --disable-warnings -o log_cli=true -o log_cli_level=INFO

      - name: Generate code_state (versioned)
        id: code_state
        run: |
          python .github/scripts/code_state.py \
            --max-bytes 200000 \
            --exclude-glob "docs/**" \
            --exclude-glob ".github/**" \
            --exclude-glob "**/__pycache__/**" \
            --exclude-glob "**/.venv/**" \
            --exclude-glob "**/venv/**" \
            --exclude-glob "**/node_modules/**" \
            --exclude-glob "**/.mypy_cache/**" \
            --exclude-glob "**/.pytest_cache/**" \
            --exclude-glob "**/*.png" \
            --exclude-glob "**/*.jpg" \
            --exclude-glob "**/*.jpeg" \
            --exclude-glob "**/*.gif" \
            --exclude-glob "**/*.pdf" \
            --exclude-glob "**/*.zip" \
            --exclude-glob "**/*.tar" \
            --exclude-glob "**/*.7z" \
            --exclude-glob "**/*.mp4" \
            --exclude-glob "**/*.pc15" \
            --exclude-glob "storage/**" \
            --exclude-glob "datasets/**"

      - name: Upload code_state artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code_state_${{ github.run_number }}
          path: ${{ steps.code_state.outputs.file }}


      - name: Upload audit artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pc15-audit-and-tests
          path: |
            artifacts/audit_generators.csv
            artifacts/audit_generators.json
            artifacts/pytest-report.xml
